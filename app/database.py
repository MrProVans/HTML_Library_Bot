import os
from pymongo import MongoClient
from dotenv import load_dotenv
from datetime import datetime, timedelta
from bson import ObjectId

load_dotenv()

MONGO_URI = os.getenv("MONGO_URI")

client = MongoClient(MONGO_URI)
db = client["html_library"]

# –ö–æ–ª–ª–µ–∫—Ü–∏–∏
# admins = db["admins"]
# clients = db["clients"]
# html_codes = db["html-codes"]
# css_codes = db["css-codes"]


def get_admins_id():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ ID –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    list_admins = db.admins.find({}, {"adminId": 1})
    return [admin["adminId"] for admin in list_admins]

def get_clients_id():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ ID –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    list_clients = db.clients.find({}, {"clientId": 1})
    return [client["clientId"] for client in list_clients]

def get_count_admins():
    """–ü–æ–ª—É—á–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    return db.admins.count_documents({})

def get_count_clients():
    """–ü–æ–ª—É—á–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö —é–∑–µ—Ä–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    return db.clients.count_documents({})

def add_task(text):
    deadline = datetime.now() + timedelta(days=7)  # –î–µ–¥–ª–∞–π–Ω —á–µ—Ä–µ–∑ 7 –¥–Ω–µ–π
    db.tasks.insert_one({"text": text, "deadline": deadline, "completed": False})

def get_tasks():
    return list(db.tasks.find({"completed": False}))

def edit_task(task_id, new_text):
    db.tasks.update_one({"_id": ObjectId(task_id)}, {"$set": {"text": new_text}})

def delete_task(task_id):
    db.tasks.delete_one({"_id": ObjectId(task_id)})

def complete_task(task_id):
    db.tasks.update_one({"_id": ObjectId(task_id)}, {"$set": {"completed": True}})

def auto_update_tasks():
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏ –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç –∑–∞ –¥–µ–Ω—å –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞"""
    now = datetime.now()
    for task in db.tasks.find({"completed": False}):
        deadline = task["deadline"]
        if deadline < now:  # –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞
            new_deadline = deadline + timedelta(days=1)
            db.tasks.update_one({"_id": task["_id"]}, {"$set": {"deadline": new_deadline}})
            print(f"‚è≥ –ó–∞–¥–∞—á–∞ {task['_id']} –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –Ω–∞ {new_deadline.strftime('%Y-%m-%d')}")
        elif (deadline - now).days == 1:  # –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ –¥–µ–Ω—å –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞
            print(f"üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ! –ó–∞–≤—Ç—Ä–∞ –¥–µ–¥–ª–∞–π–Ω –ø–æ –∑–∞–¥–∞—á–µ: {task['text']}")


